[{"C:\\Users\\talat.farimaz\\IdeaProjects\\TakeNote\\frontend\\src\\index.js":"1","C:\\Users\\talat.farimaz\\IdeaProjects\\TakeNote\\frontend\\src\\App.js":"2","C:\\Users\\talat.farimaz\\IdeaProjects\\TakeNote\\frontend\\src\\reportWebVitals.js":"3","C:\\Users\\talat.farimaz\\IdeaProjects\\TakeNote\\frontend\\src\\i18n\\i18n.js":"4","C:\\Users\\talat.farimaz\\IdeaProjects\\TakeNote\\frontend\\src\\Home.js":"5","C:\\Users\\talat.farimaz\\IdeaProjects\\TakeNote\\frontend\\src\\ClientEdit.js":"6","C:\\Users\\talat.farimaz\\IdeaProjects\\TakeNote\\frontend\\src\\ClientList.js":"7","C:\\Users\\talat.farimaz\\IdeaProjects\\TakeNote\\frontend\\src\\Themes\\DefaultTheme.js":"8","C:\\Users\\talat.farimaz\\IdeaProjects\\TakeNote\\frontend\\src\\state\\store.js":"9","C:\\Users\\talat.farimaz\\IdeaProjects\\TakeNote\\frontend\\src\\enums\\LanguagesEnum.js":"10","C:\\Users\\talat.farimaz\\IdeaProjects\\TakeNote\\frontend\\src\\Components\\AppContent.js":"11","C:\\Users\\talat.farimaz\\IdeaProjects\\TakeNote\\frontend\\src\\Components\\AppNavbar.js":"12","C:\\Users\\talat.farimaz\\IdeaProjects\\TakeNote\\frontend\\src\\Components\\LeftMenu.js":"13","C:\\Users\\talat.farimaz\\IdeaProjects\\TakeNote\\frontend\\src\\state\\reducers\\index.js":"14","C:\\Users\\talat.farimaz\\IdeaProjects\\TakeNote\\frontend\\src\\Components\\AppDetailedContent.js":"15","C:\\Users\\talat.farimaz\\IdeaProjects\\TakeNote\\frontend\\src\\Styles\\AppNavbarStyle.js":"16","C:\\Users\\talat.farimaz\\IdeaProjects\\TakeNote\\frontend\\src\\Styles\\AppContentStyle.js":"17","C:\\Users\\talat.farimaz\\IdeaProjects\\TakeNote\\frontend\\src\\Styles\\LeftMenuStyle.js":"18","C:\\Users\\talat.farimaz\\IdeaProjects\\TakeNote\\frontend\\src\\Modals\\AddBookModal.js":"19","C:\\Users\\talat.farimaz\\IdeaProjects\\TakeNote\\frontend\\src\\state\\reducers\\AppReducers.js":"20","C:\\Users\\talat.farimaz\\IdeaProjects\\TakeNote\\frontend\\src\\Styles\\AppDetailedContentStyle.js":"21","C:\\Users\\talat.farimaz\\IdeaProjects\\TakeNote\\frontend\\src\\Styles\\AddBookModalStyle.js":"22","C:\\Users\\talat.farimaz\\IdeaProjects\\TakeNote\\frontend\\src\\Modals\\AddCategoryModal.js":"23","C:\\Users\\talat.farimaz\\IdeaProjects\\TakeNote\\frontend\\src\\Components\\StickyNote.js":"24","C:\\Users\\talat.farimaz\\IdeaProjects\\TakeNote\\frontend\\src\\Styles\\StickyNoteStyle.js":"25","C:\\Users\\talat.farimaz\\IdeaProjects\\TakeNote\\frontend\\src\\Modals\\DialogTitle.js":"26","C:\\Users\\talat.farimaz\\IdeaProjects\\TakeNote\\frontend\\src\\Modals\\ColorSelectorModal.js":"27","C:\\Users\\talat.farimaz\\IdeaProjects\\TakeNote\\frontend\\src\\Styles\\ColorSelectorModalStyle.js":"28","C:\\Users\\talat.farimaz\\IdeaProjects\\TakeNote\\frontend\\src\\Components\\TakeNoteArea.js":"29","C:\\Users\\talat.farimaz\\IdeaProjects\\TakeNote\\frontend\\src\\Styles\\TakeNoteAreaStyle.js":"30","C:\\Users\\talat.farimaz\\IdeaProjects\\TakeNote\\frontend\\src\\Modals\\NoteDetailModal.js":"31","C:\\Users\\talat.farimaz\\IdeaProjects\\TakeNote\\frontend\\src\\Styles\\NoteDetailModalStyle.js":"32"},{"size":365,"mtime":1634658155473,"results":"33","hashOfConfig":"34"},{"size":1029,"mtime":1634658154236,"results":"35","hashOfConfig":"34"},{"size":362,"mtime":1634658155473,"results":"36","hashOfConfig":"34"},{"size":804,"mtime":1634658155463,"results":"37","hashOfConfig":"34"},{"size":534,"mtime":1634658154262,"results":"38","hashOfConfig":"34"},{"size":2649,"mtime":1634658154236,"results":"39","hashOfConfig":"34"},{"size":2437,"mtime":1634658154236,"results":"40","hashOfConfig":"34"},{"size":3254,"mtime":1634826777503,"results":"41","hashOfConfig":"34"},{"size":113,"mtime":1634658155473,"results":"42","hashOfConfig":"34"},{"size":93,"mtime":1634658155463,"results":"43","hashOfConfig":"34"},{"size":392,"mtime":1634658154236,"results":"44","hashOfConfig":"34"},{"size":10115,"mtime":1635243684959,"results":"45","hashOfConfig":"34"},{"size":3897,"mtime":1634658154262,"results":"46","hashOfConfig":"34"},{"size":136,"mtime":1634658155473,"results":"47","hashOfConfig":"34"},{"size":3570,"mtime":1635245478708,"results":"48","hashOfConfig":"34"},{"size":2756,"mtime":1634658155463,"results":"49","hashOfConfig":"34"},{"size":265,"mtime":1634658155456,"results":"50","hashOfConfig":"34"},{"size":2787,"mtime":1634797934966,"results":"51","hashOfConfig":"34"},{"size":2983,"mtime":1635156166345,"results":"52","hashOfConfig":"34"},{"size":538,"mtime":1635243349773,"results":"53","hashOfConfig":"34"},{"size":1201,"mtime":1634658155456,"results":"54","hashOfConfig":"34"},{"size":513,"mtime":1635157520429,"results":"55","hashOfConfig":"34"},{"size":3188,"mtime":1634711483013,"results":"56","hashOfConfig":"34"},{"size":7898,"mtime":1635245478703,"results":"57","hashOfConfig":"34"},{"size":833,"mtime":1634813351618,"results":"58","hashOfConfig":"34"},{"size":892,"mtime":1635157604659,"results":"59","hashOfConfig":"34"},{"size":3936,"mtime":1635242085265,"results":"60","hashOfConfig":"34"},{"size":329,"mtime":1634725905434,"results":"61","hashOfConfig":"34"},{"size":13809,"mtime":1635245478682,"results":"62","hashOfConfig":"34"},{"size":1068,"mtime":1634885290282,"results":"63","hashOfConfig":"34"},{"size":15020,"mtime":1635230538898,"results":"64","hashOfConfig":"34"},{"size":1074,"mtime":1635145125487,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"6c4wtn",{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"68"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"68"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"68"},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"68"},{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"68"},{"filePath":"134","messages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"C:\\Users\\talat.farimaz\\IdeaProjects\\TakeNote\\frontend\\src\\index.js",[],["136","137"],"C:\\Users\\talat.farimaz\\IdeaProjects\\TakeNote\\frontend\\src\\App.js",[],"C:\\Users\\talat.farimaz\\IdeaProjects\\TakeNote\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\talat.farimaz\\IdeaProjects\\TakeNote\\frontend\\src\\i18n\\i18n.js",[],"C:\\Users\\talat.farimaz\\IdeaProjects\\TakeNote\\frontend\\src\\Home.js",["138","139","140","141","142"],"import React, { Component } from 'react';\nimport './App.css';\nimport { Link } from 'react-router-dom';\nimport {Container } from 'reactstrap';\nimport AppNavbar from \"./Components/AppNavbar\";\nimport {Button, Grid} from \"@material-ui/core\";\nimport LeftMenu from \"./Components/LeftMenu\";\nimport AppContent from \"./Components/AppContent\";\n\nclass Home extends Component {\n    render() {\n        return (\n            <div>\n                <AppNavbar/>\n                <AppContent/>\n            </div>\n        );\n    }\n}\n\nexport default Home;","C:\\Users\\talat.farimaz\\IdeaProjects\\TakeNote\\frontend\\src\\ClientEdit.js",[],"C:\\Users\\talat.farimaz\\IdeaProjects\\TakeNote\\frontend\\src\\ClientList.js",[],"C:\\Users\\talat.farimaz\\IdeaProjects\\TakeNote\\frontend\\src\\Themes\\DefaultTheme.js",[],"C:\\Users\\talat.farimaz\\IdeaProjects\\TakeNote\\frontend\\src\\state\\store.js",[],"C:\\Users\\talat.farimaz\\IdeaProjects\\TakeNote\\frontend\\src\\enums\\LanguagesEnum.js",[],"C:\\Users\\talat.farimaz\\IdeaProjects\\TakeNote\\frontend\\src\\Components\\AppContent.js",[],"C:\\Users\\talat.farimaz\\IdeaProjects\\TakeNote\\frontend\\src\\Components\\AppNavbar.js",[],"C:\\Users\\talat.farimaz\\IdeaProjects\\TakeNote\\frontend\\src\\Components\\LeftMenu.js",[],"C:\\Users\\talat.farimaz\\IdeaProjects\\TakeNote\\frontend\\src\\state\\reducers\\index.js",[],"C:\\Users\\talat.farimaz\\IdeaProjects\\TakeNote\\frontend\\src\\Components\\AppDetailedContent.js",[],"C:\\Users\\talat.farimaz\\IdeaProjects\\TakeNote\\frontend\\src\\Styles\\AppNavbarStyle.js",[],"C:\\Users\\talat.farimaz\\IdeaProjects\\TakeNote\\frontend\\src\\Styles\\AppContentStyle.js",[],"C:\\Users\\talat.farimaz\\IdeaProjects\\TakeNote\\frontend\\src\\Styles\\LeftMenuStyle.js",[],"C:\\Users\\talat.farimaz\\IdeaProjects\\TakeNote\\frontend\\src\\Modals\\AddBookModal.js",["143"],"import React, {forwardRef, useImperativeHandle} from 'react';\nimport {withStyles} from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport Typography from '@material-ui/core/Typography';\nimport AddBookModalStyle from \"../Styles/AddBookModalStyle\";\nimport {useTranslation} from \"react-i18next\";\nimport {FormControl, TextField} from \"@material-ui/core\";\nimport DialogTitle from \"./DialogTitle\";\nimport axios from \"axios\";\n\n\nconst DialogContent = withStyles((theme) => ({\n    root: {\n        padding: theme.spacing(2),\n    },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles((theme) => ({\n    root: {\n        margin: 0,\n        padding: theme.spacing(1),\n    },\n}))(MuiDialogActions);\n\nexport const AddBookModal = forwardRef((props, ref) => {\n    useImperativeHandle(\n        ref,\n        () => ({\n            handleClickOpenWithRef() {\n                setOpen(true);\n            }\n        }),\n    )\n    const [open, setOpen] = React.useState(false);\n    const [bookName, setBookName] = React.useState(null);\n    const {t} = useTranslation();\n    const classes = AddBookModalStyle();\n\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n        setBookName(null);\n    };\n\n    const handleSaveBook = () => {\n        axios.post('/books', {\n            bookName: bookName\n        }).then(function (response) {\n            console.log(response);\n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n\n    const handleChange = (event) => {\n        setBookName(event.target.value);\n    };\n    return (\n        <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" maxWidth={\"sm\"} fullWidth={true}\n                open={open}>\n            <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n                {t('AddBook')}\n            </DialogTitle>\n            <DialogContent dividers>\n                <FormControl variant=\"outlined\" className={classes.addBookArea}>\n                    <TextField type={\"text\"} value={bookName} id=\"outlined-basic\" label={t('BookName')}\n                               variant=\"outlined\" onChange={handleChange}/>\n                </FormControl>\n            </DialogContent>\n            <DialogActions>\n                <Button autoFocus onClick={handleSaveBook} color=\"primary\" variant={\"contained\"}>\n                    <Typography>\n                        {t('Save')}\n                    </Typography>\n                </Button>\n                <Button autoFocus onClick={handleClose} color=\"primary\" variant={\"contained\"}>\n                    <Typography>\n                        {t('Cancel')}\n                    </Typography>\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n})\n\n","C:\\Users\\talat.farimaz\\IdeaProjects\\TakeNote\\frontend\\src\\state\\reducers\\AppReducers.js",["144"],"C:\\Users\\talat.farimaz\\IdeaProjects\\TakeNote\\frontend\\src\\Styles\\AppDetailedContentStyle.js",[],"C:\\Users\\talat.farimaz\\IdeaProjects\\TakeNote\\frontend\\src\\Styles\\AddBookModalStyle.js",[],"C:\\Users\\talat.farimaz\\IdeaProjects\\TakeNote\\frontend\\src\\Modals\\AddCategoryModal.js",["145","146","147","148"],"import React, {forwardRef, useImperativeHandle} from 'react';\nimport {withStyles} from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport AddBookModalStyle from \"../Styles/AddBookModalStyle\";\nimport {useTranslation} from \"react-i18next\";\nimport {FormControl, TextField} from \"@material-ui/core\";\nimport axios from \"axios\";\nimport DialogTitle from \"./DialogTitle\";\n\nconst DialogContent = withStyles((theme) => ({\n    root: {\n        padding: theme.spacing(2),\n    },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles((theme) => ({\n    root: {\n        margin: 0,\n        padding: theme.spacing(1),\n    },\n}))(MuiDialogActions);\n\nexport const AddCategoryModal = forwardRef((props, ref) => {\n    useImperativeHandle(\n        ref,\n        () => ({\n            handleClickOpenWithRef() {\n                setOpen(true);\n            }\n        }),\n    )\n    const [open, setOpen] = React.useState(false);\n    const [categoryName, setCategoryName] = React.useState(null);\n    const {t} = useTranslation();\n    const classes = AddBookModalStyle();\n\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n        setCategoryName(null);\n    };\n\n    const handleSaveBook = () => {\n        axios.post('/categories', {\n            bookName: categoryName\n        }).then(function (response) {\n            console.log(response);\n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n\n    const handleChange = (event) => {\n        setCategoryName(event.target.value);\n    };\n    return (\n        <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" maxWidth={\"sm\"} fullWidth={true}\n                open={open}>\n            <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n                {t('AddCategory')}\n            </DialogTitle>\n            <DialogContent dividers>\n                <FormControl variant=\"outlined\" className={classes.addBookArea}>\n                    <TextField type={\"text\"} value={categoryName} id=\"outlined-basic\" label={t('CategoryName')}\n                               variant=\"outlined\" onChange={handleChange}/>\n                </FormControl>\n            </DialogContent>\n            <DialogActions>\n                <Button autoFocus onClick={handleSaveBook} color=\"primary\" variant={\"contained\"}>\n                    <Typography>\n                        {t('Save')}\n                    </Typography>\n                </Button>\n                <Button autoFocus onClick={handleClose} color=\"primary\" variant={\"contained\"}>\n                    <Typography>\n                        {t('Cancel')}\n                    </Typography>\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n})\n\n","C:\\Users\\talat.farimaz\\IdeaProjects\\TakeNote\\frontend\\src\\Components\\StickyNote.js",[],"C:\\Users\\talat.farimaz\\IdeaProjects\\TakeNote\\frontend\\src\\Styles\\StickyNoteStyle.js",["149","150"],"import {alpha, makeStyles} from \"@material-ui/core/styles\";\nimport DefaultTheme from \"../Themes/DefaultTheme\";\n\nconst StickyNoteStyle = makeStyles(theme => ({\n    iconButtons: {\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\"\n    },\n    stickyPadding: {\n        [theme.breakpoints.up('lg')]: {\n            margin: \"15px\"\n        },\n        [theme.breakpoints.only('md')]: {\n            margin: \"12px\"\n        },\n        [theme.breakpoints.only('sm')]: {\n            margin: \"9px\"\n        },\n        [theme.breakpoints.only('xs')]: {\n            margin: \"6px\"\n        },\n    },\n    contentGrid: {\n        textAlign: \"center\",\n        padding: \"5px\"\n    },\n    noteStyle: {\n        fontSize: \"14px\"\n    },\n    pinButton: {\n        textAlign: \"right\",\n    },\n}))\n\n\nexport default StickyNoteStyle;","C:\\Users\\talat.farimaz\\IdeaProjects\\TakeNote\\frontend\\src\\Modals\\DialogTitle.js",[],"C:\\Users\\talat.farimaz\\IdeaProjects\\TakeNote\\frontend\\src\\Modals\\ColorSelectorModal.js",["151","152"],"C:\\Users\\talat.farimaz\\IdeaProjects\\TakeNote\\frontend\\src\\Styles\\ColorSelectorModalStyle.js",[],"C:\\Users\\talat.farimaz\\IdeaProjects\\TakeNote\\frontend\\src\\Components\\TakeNoteArea.js",["153","154"],"C:\\Users\\talat.farimaz\\IdeaProjects\\TakeNote\\frontend\\src\\Styles\\TakeNoteAreaStyle.js",[],"C:\\Users\\talat.farimaz\\IdeaProjects\\TakeNote\\frontend\\src\\Modals\\NoteDetailModal.js",["155","156"],"import React, {forwardRef, useImperativeHandle, useRef} from 'react';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport MuiDialogContent from '@material-ui/core/DialogContent';\r\nimport MuiDialogActions from '@material-ui/core/DialogActions';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {useTranslation} from \"react-i18next\";\r\nimport {ClickAwayListener, Divider, Grid, InputBase, TextField, Tooltip} from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\nimport NoteDetailModalStyle from \"../Styles/NoteDetailModalStyle\";\r\nimport GpsFixedSharpIcon from \"@material-ui/icons/GpsFixedSharp\";\r\nimport AccessAlarmIcon from \"@material-ui/icons/AccessAlarm\";\r\nimport ArchiveIcon from \"@material-ui/icons/Archive\";\r\nimport ImageIcon from \"@material-ui/icons/Image\";\r\nimport FormatPaintIcon from \"@material-ui/icons/FormatPaint\";\r\nimport PersonAddIcon from \"@material-ui/icons/PersonAdd\";\r\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\r\nimport UndoIcon from \"@material-ui/icons/Undo\";\r\nimport RedoIcon from \"@material-ui/icons/Redo\";\r\nimport FormatListNumberedIcon from \"@material-ui/icons/FormatListNumbered\";\r\nimport BorderColorIcon from \"@material-ui/icons/BorderColor\";\r\nimport DefaultTheme from \"../Themes/DefaultTheme\";\r\nimport {ColorSelectorModal} from \"./ColorSelectorModal\";\r\nimport DialogTitle from \"./DialogTitle\";\r\n\r\n\r\nconst DialogContent = withStyles((theme) => ({\r\n    root: {\r\n        padding: theme.spacing(2),\r\n    },\r\n}))(MuiDialogContent);\r\n\r\nconst DialogActions = withStyles((theme) => ({\r\n    root: {\r\n        margin: 0,\r\n        padding: theme.spacing(1),\r\n    },\r\n}))(MuiDialogActions);\r\n\r\nexport const NoteDetailModal = forwardRef((props, ref) => {\r\n    useImperativeHandle(\r\n        ref,\r\n        () => ({\r\n            handleClickOpenWithRef(note, color) {\r\n                setOpen(true);\r\n                setColor(color);\r\n                setNoteDetail(note);\r\n                setOpenDetail(true)\r\n            }\r\n        }),\r\n    )\r\n    const [open, setOpen] = React.useState(false);\r\n    const [color, setColor] = React.useState(DefaultTheme.palette.success.contrastText);\r\n    const [noteDetail, setNoteDetail] = React.useState(null);\r\n    const classes = NoteDetailModalStyle();\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n    const {t} = useTranslation();\r\n    const [openDetail, setOpenDetail] = React.useState(false);\r\n    const [redo, setRedo] = React.useState(true);\r\n    const [undo, setUndo] = React.useState(true);\r\n    const childRef = useRef();\r\n    const handleOpenColorSelector = (event) => {\r\n        childRef.current.handleClickOpenWithRef();\r\n    };\r\n    const handleOnChangeTakeNote = () => {\r\n        setOpenDetail(true);\r\n    }\r\n    const handleSaveBook = () => {\r\n        axios.post('/books', {\r\n            bookName: \"bookName\"\r\n        }).then(function (response) {\r\n            console.log(response);\r\n        }).catch(function (error) {\r\n            console.log(error);\r\n        });\r\n    }\r\n    const handleGetDetailedNoteArea = () => {\r\n        if (openDetail) {\r\n            return (\r\n                <ClickAwayListener onClickAway={() => {\r\n                    setOpenDetail(false)\r\n                }}>\r\n                    <Grid container className={classes.contentGrid} spacing={2}>\r\n                        <Grid item xs={12} className={classes.pinButton}>\r\n                            <Tooltip title={t('Pin')}>\r\n                                <IconButton\r\n                                    color=\"inherit\"\r\n                                    size={\"small\"}\r\n                                    onClick={event => {\r\n                                        event.stopPropagation();\r\n                                        event.preventDefault();\r\n                                        alert(\"Button clicked\");\r\n                                    }}\r\n                                >\r\n                                    <GpsFixedSharpIcon fontSize={\"small\"}/>\r\n                                </IconButton>\r\n                            </Tooltip>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                className={classes.textAreaStyle}\r\n                                placeholder={t('TakeNote')}\r\n                                inputProps={{'aria-label': t('TakeNote')}}\r\n                                onSelect={() => {\r\n                                    handleOnChangeTakeNote()\r\n                                }}\r\n                                value={noteDetail}\r\n                            /> </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Grid container spacing={1}>\r\n                                <Grid item xs={1} className={classes.iconButtons}>\r\n                                    <Tooltip title={t('Reminder')}>\r\n                                        <IconButton\r\n                                            color=\"inherit\"\r\n                                            size={\"small\"}\r\n                                            onClick={event => {\r\n                                                event.stopPropagation();\r\n                                                event.preventDefault();\r\n                                                alert(\"Button clicked\");\r\n                                            }}\r\n                                        >\r\n                                            <AccessAlarmIcon fontSize={\"small\"}/>\r\n                                        </IconButton>\r\n                                    </Tooltip>\r\n                                </Grid>\r\n                                <Grid item xs={1} className={classes.iconButtons}>\r\n                                    <Tooltip title={t('ArchiveNote')}>\r\n                                        <IconButton\r\n                                            color=\"inherit\"\r\n                                            size={\"small\"}\r\n                                            onClick={event => {\r\n                                                event.stopPropagation();\r\n                                                event.preventDefault();\r\n                                                alert(\"Button clicked\");\r\n                                            }}\r\n                                        >\r\n                                            <ArchiveIcon fontSize={\"small\"}/>\r\n                                        </IconButton>\r\n                                    </Tooltip>\r\n                                </Grid>\r\n                                <Grid item xs={1} className={classes.iconButtons}>\r\n                                    <Tooltip title={t('AddImage')}>\r\n                                        <IconButton\r\n                                            color=\"inherit\"\r\n                                            size={\"small\"}\r\n                                            onClick={(event) => {\r\n                                                event.stopPropagation();\r\n                                                event.preventDefault();\r\n                                                handleOpenColorSelector();\r\n                                            }}\r\n                                        >\r\n                                            <ImageIcon fontSize={\"small\"}/>\r\n                                        </IconButton>\r\n                                    </Tooltip>\r\n                                </Grid>\r\n                                <Grid item xs={1} className={classes.iconButtons}>\r\n                                    <Tooltip title={t('ColorSelect')}>\r\n                                        <IconButton\r\n                                            color=\"inherit\"\r\n                                            size={\"small\"}\r\n                                            onClick={(event) => {\r\n                                                event.stopPropagation();\r\n                                                event.preventDefault();\r\n                                                handleOpenColorSelector();\r\n                                            }}\r\n                                        >\r\n                                            <FormatPaintIcon fontSize={\"small\"}/>\r\n                                        </IconButton>\r\n                                    </Tooltip>\r\n                                </Grid>\r\n                                <Grid item xs={1} className={classes.iconButtons}>\r\n                                    <Tooltip title={t('CommonPerson')}>\r\n                                        <IconButton\r\n                                            color=\"inherit\"\r\n                                            size={\"small\"}\r\n                                            onClick={event => {\r\n                                                event.stopPropagation();\r\n                                                event.preventDefault();\r\n                                                alert(\"Button clicked\");\r\n                                            }}\r\n                                        >\r\n                                            <PersonAddIcon fontSize={\"small\"}/>\r\n                                        </IconButton>\r\n                                    </Tooltip>\r\n                                </Grid>\r\n                                <Grid item xs={1} className={classes.iconButtons}>\r\n                                    <Tooltip title={t('Options')}>\r\n                                        <IconButton\r\n                                            color=\"inherit\"\r\n                                            size={\"small\"}\r\n                                            onClick={event => {\r\n                                                event.stopPropagation();\r\n                                                event.preventDefault();\r\n                                                alert(\"Button clicked\");\r\n                                            }}\r\n                                        >\r\n                                            <MoreVertIcon fontSize={\"small\"}/>\r\n                                        </IconButton>\r\n                                    </Tooltip>\r\n                                </Grid>\r\n                                <Grid item xs={1} className={classes.iconButtons}>\r\n                                    <Tooltip title={t('Options')}>\r\n                                        <IconButton\r\n                                            color=\"inherit\"\r\n                                            size={\"small\"}\r\n                                            onClick={event => {\r\n                                                event.stopPropagation();\r\n                                                event.preventDefault();\r\n                                                alert(\"Button clicked\");\r\n                                            }}\r\n                                            disabled={undo}\r\n                                        >\r\n                                            <UndoIcon fontSize={\"small\"}/>\r\n                                        </IconButton>\r\n                                    </Tooltip>\r\n                                </Grid>\r\n                                <Grid item xs={1} className={classes.iconButtons}>\r\n                                    <Tooltip title={t('Options')}>\r\n                                        <IconButton\r\n                                            color=\"inherit\"\r\n                                            size={\"small\"}\r\n                                            onClick={event => {\r\n                                                event.stopPropagation();\r\n                                                event.preventDefault();\r\n                                                alert(\"Button clicked\");\r\n                                            }}\r\n                                            disabled={redo}\r\n                                        >\r\n                                            <RedoIcon fontSize={\"small\"}/>\r\n                                        </IconButton>\r\n                                    </Tooltip>\r\n                                </Grid>\r\n                                <Grid item xs={4} className={classes.cancelButton}>\r\n                                </Grid>\r\n\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </ClickAwayListener>\r\n            )\r\n        } else {\r\n            return (\r\n                <div className={classes.root}>\r\n                    <InputBase\r\n                        className={classes.input}\r\n                        placeholder={t('TakeNote')}\r\n                        inputProps={{'aria-label': t('TakeNote')}}\r\n                        onSelect={() => {\r\n                            handleOnChangeTakeNote()\r\n                        }}\r\n                    />\r\n                    <IconButton color=\"primary\" className={classes.iconButton} aria-label=\"search\">\r\n                        <FormatListNumberedIcon/>\r\n                    </IconButton>\r\n                    <Divider className={classes.divider} orientation=\"vertical\"/>\r\n                    <IconButton color=\"primary\" className={classes.iconButton} aria-label=\"directions\">\r\n                        <BorderColorIcon/>\r\n                    </IconButton>\r\n                    <Divider className={classes.divider} orientation=\"vertical\"/>\r\n                    <IconButton color=\"primary\" className={classes.iconButton} aria-label=\"search\">\r\n                        <ImageIcon/>\r\n                    </IconButton>\r\n                </div>\r\n\r\n            )\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" maxWidth={\"sm\"}\r\n                PaperProps={{style: {backgroundColor: color}}} fullWidth={true} open={open}>\r\n            <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\r\n                {t('AddBook')}\r\n            </DialogTitle>\r\n            <DialogContent dividers>\r\n                {handleGetDetailedNoteArea()}\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button autoFocus onClick={handleSaveBook} color=\"primary\" variant={\"contained\"}>\r\n                    <Typography>\r\n                        {t('Save')}\r\n                    </Typography>\r\n                </Button>\r\n                <Button autoFocus onClick={handleClose} color=\"primary\" variant={\"contained\"}>\r\n                    <Typography>\r\n                        {t('Cancel')}\r\n                    </Typography>\r\n                </Button>\r\n            </DialogActions>\r\n            <ColorSelectorModal ref={childRef} setColor={setColor}/>\r\n        </Dialog>\r\n    );\r\n})\r\n\r\n","C:\\Users\\talat.farimaz\\IdeaProjects\\TakeNote\\frontend\\src\\Styles\\NoteDetailModalStyle.js",[],{"ruleId":"157","replacedBy":"158"},{"ruleId":"159","replacedBy":"160"},{"ruleId":"161","severity":1,"message":"162","line":3,"column":10,"nodeType":"163","messageId":"164","endLine":3,"endColumn":14},{"ruleId":"161","severity":1,"message":"165","line":4,"column":9,"nodeType":"163","messageId":"164","endLine":4,"endColumn":18},{"ruleId":"161","severity":1,"message":"166","line":6,"column":9,"nodeType":"163","messageId":"164","endLine":6,"endColumn":15},{"ruleId":"161","severity":1,"message":"167","line":6,"column":17,"nodeType":"163","messageId":"164","endLine":6,"endColumn":21},{"ruleId":"161","severity":1,"message":"168","line":7,"column":8,"nodeType":"163","messageId":"164","endLine":7,"endColumn":16},{"ruleId":"161","severity":1,"message":"169","line":42,"column":11,"nodeType":"163","messageId":"164","endLine":42,"endColumn":26},{"ruleId":"170","severity":1,"message":"171","line":7,"column":1,"nodeType":"172","endLine":18,"endColumn":2},{"ruleId":"161","severity":1,"message":"173","line":5,"column":8,"nodeType":"163","messageId":"164","endLine":5,"endColumn":22},{"ruleId":"161","severity":1,"message":"174","line":8,"column":8,"nodeType":"163","messageId":"164","endLine":8,"endColumn":18},{"ruleId":"161","severity":1,"message":"175","line":9,"column":8,"nodeType":"163","messageId":"164","endLine":9,"endColumn":17},{"ruleId":"161","severity":1,"message":"169","line":44,"column":11,"nodeType":"163","messageId":"164","endLine":44,"endColumn":26},{"ruleId":"161","severity":1,"message":"176","line":1,"column":9,"nodeType":"163","messageId":"164","endLine":1,"endColumn":14},{"ruleId":"161","severity":1,"message":"177","line":2,"column":8,"nodeType":"163","messageId":"164","endLine":2,"endColumn":20},{"ruleId":"161","severity":1,"message":"169","line":51,"column":11,"nodeType":"163","messageId":"164","endLine":51,"endColumn":26},{"ruleId":"161","severity":1,"message":"178","line":59,"column":11,"nodeType":"163","messageId":"164","endLine":59,"endColumn":25},{"ruleId":"161","severity":1,"message":"179","line":34,"column":18,"nodeType":"163","messageId":"164","endLine":34,"endColumn":25},{"ruleId":"161","severity":1,"message":"180","line":35,"column":18,"nodeType":"163","messageId":"164","endLine":35,"endColumn":25},{"ruleId":"161","severity":1,"message":"179","line":63,"column":18,"nodeType":"163","messageId":"164","endLine":63,"endColumn":25},{"ruleId":"161","severity":1,"message":"180","line":64,"column":18,"nodeType":"163","messageId":"164","endLine":64,"endColumn":25},"no-native-reassign",["181"],"no-negated-in-lhs",["182"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'Container' is defined but never used.","'Button' is defined but never used.","'Grid' is defined but never used.","'LeftMenu' is defined but never used.","'handleClickOpen' is assigned a value but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'MuiDialogTitle' is defined but never used.","'IconButton' is defined but never used.","'CloseIcon' is defined but never used.","'alpha' is defined but never used.","'DefaultTheme' is defined but never used.","'handleSaveBook' is assigned a value but never used.","'setRedo' is assigned a value but never used.","'setUndo' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]